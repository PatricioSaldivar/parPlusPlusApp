// Generated from ParPlusPlus.g4 by ANTLR 4.8
// jshint ignore: start
var antlr4 = require('antlr4/index');



var serializedATN = ["\u0003\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964",
    "\u00021\u011d\b\u0001\u0004\u0002\t\u0002\u0004\u0003\t\u0003\u0004",
    "\u0004\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007\t",
    "\u0007\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004",
    "\f\t\f\u0004\r\t\r\u0004\u000e\t\u000e\u0004\u000f\t\u000f\u0004\u0010",
    "\t\u0010\u0004\u0011\t\u0011\u0004\u0012\t\u0012\u0004\u0013\t\u0013",
    "\u0004\u0014\t\u0014\u0004\u0015\t\u0015\u0004\u0016\t\u0016\u0004\u0017",
    "\t\u0017\u0004\u0018\t\u0018\u0004\u0019\t\u0019\u0004\u001a\t\u001a",
    "\u0004\u001b\t\u001b\u0004\u001c\t\u001c\u0004\u001d\t\u001d\u0004\u001e",
    "\t\u001e\u0004\u001f\t\u001f\u0004 \t \u0004!\t!\u0004\"\t\"\u0004#",
    "\t#\u0004$\t$\u0004%\t%\u0004&\t&\u0004\'\t\'\u0004(\t(\u0004)\t)\u0004",
    "*\t*\u0004+\t+\u0004,\t,\u0004-\t-\u0004.\t.\u0004/\t/\u00040\t0\u0003",
    "\u0002\u0003\u0002\u0003\u0002\u0003\u0002\u0003\u0003\u0003\u0003\u0003",
    "\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0004\u0003\u0004\u0003",
    "\u0004\u0003\u0004\u0003\u0004\u0003\u0005\u0003\u0005\u0003\u0005\u0003",
    "\u0005\u0003\u0005\u0003\u0006\u0003\u0006\u0003\u0006\u0003\u0006\u0003",
    "\u0006\u0003\u0006\u0003\u0006\u0003\u0006\u0003\u0007\u0003\u0007\u0003",
    "\u0007\u0003\u0007\u0003\u0007\u0003\u0007\u0003\u0007\u0003\b\u0003",
    "\b\u0003\b\u0003\b\u0003\t\u0003\t\u0003\t\u0003\t\u0003\t\u0003\n\u0003",
    "\n\u0003\n\u0003\u000b\u0003\u000b\u0003\u000b\u0003\u000b\u0003\u000b",
    "\u0003\f\u0003\f\u0003\f\u0003\f\u0003\f\u0003\f\u0003\f\u0003\r\u0003",
    "\r\u0003\r\u0003\r\u0003\r\u0003\u000e\u0003\u000e\u0003\u000e\u0003",
    "\u000e\u0003\u000e\u0003\u000e\u0003\u000f\u0003\u000f\u0003\u000f\u0003",
    "\u000f\u0003\u000f\u0003\u0010\u0003\u0010\u0003\u0010\u0003\u0011\u0003",
    "\u0011\u0003\u0012\u0003\u0012\u0003\u0013\u0003\u0013\u0003\u0014\u0003",
    "\u0014\u0003\u0015\u0003\u0015\u0003\u0016\u0003\u0016\u0003\u0017\u0003",
    "\u0017\u0003\u0018\u0003\u0018\u0003\u0019\u0003\u0019\u0003\u001a\u0003",
    "\u001a\u0003\u001b\u0003\u001b\u0003\u001c\u0003\u001c\u0003\u001d\u0003",
    "\u001d\u0003\u001e\u0003\u001e\u0003\u001e\u0003\u001f\u0003\u001f\u0003",
    "\u001f\u0003 \u0003 \u0003 \u0003!\u0003!\u0003!\u0003\"\u0003\"\u0003",
    "#\u0003#\u0003#\u0003$\u0003$\u0003$\u0003%\u0003%\u0003&\u0003&\u0003",
    "\'\u0003\'\u0003(\u0003(\u0003(\u0003(\u0003)\u0003)\u0003)\u0003)\u0003",
    ")\u0003)\u0003*\u0003*\u0003*\u0003+\u0003+\u0007+\u00f3\n+\f+\u000e",
    "+\u00f6\u000b+\u0003,\u0006,\u00f9\n,\r,\u000e,\u00fa\u0003-\u0006-",
    "\u00fe\n-\r-\u000e-\u00ff\u0003-\u0003-\u0006-\u0104\n-\r-\u000e-\u0105",
    "\u0005-\u0108\n-\u0003.\u0003.\u0007.\u010c\n.\f.\u000e.\u010f\u000b",
    ".\u0003.\u0003.\u0003/\u0003/\u0003/\u0003/\u00030\u00060\u0118\n0\r",
    "0\u000e0\u0119\u00030\u00030\u0002\u00021\u0003\u0003\u0005\u0004\u0007",
    "\u0005\t\u0006\u000b\u0007\r\b\u000f\t\u0011\n\u0013\u000b\u0015\f\u0017",
    "\r\u0019\u000e\u001b\u000f\u001d\u0010\u001f\u0011!\u0012#\u0013%\u0014",
    "\'\u0015)\u0016+\u0017-\u0018/\u00191\u001a3\u001b5\u001c7\u001d9\u001e",
    ";\u001f= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]0_1\u0003\u0002\b\u0004\u0002",
    "C\\c|\u0005\u00022;C\\c|\u0005\u0002\u000b\f\u000f\u000f$$\u0003\u0002",
    "))\u0004\u0002\u000b\f\u000f\u000f\u0005\u0002\u000b\f\u000f\u000f\"",
    "\"\u0002\u0123\u0002\u0003\u0003\u0002\u0002\u0002\u0002\u0005\u0003",
    "\u0002\u0002\u0002\u0002\u0007\u0003\u0002\u0002\u0002\u0002\t\u0003",
    "\u0002\u0002\u0002\u0002\u000b\u0003\u0002\u0002\u0002\u0002\r\u0003",
    "\u0002\u0002\u0002\u0002\u000f\u0003\u0002\u0002\u0002\u0002\u0011\u0003",
    "\u0002\u0002\u0002\u0002\u0013\u0003\u0002\u0002\u0002\u0002\u0015\u0003",
    "\u0002\u0002\u0002\u0002\u0017\u0003\u0002\u0002\u0002\u0002\u0019\u0003",
    "\u0002\u0002\u0002\u0002\u001b\u0003\u0002\u0002\u0002\u0002\u001d\u0003",
    "\u0002\u0002\u0002\u0002\u001f\u0003\u0002\u0002\u0002\u0002!\u0003",
    "\u0002\u0002\u0002\u0002#\u0003\u0002\u0002\u0002\u0002%\u0003\u0002",
    "\u0002\u0002\u0002\'\u0003\u0002\u0002\u0002\u0002)\u0003\u0002\u0002",
    "\u0002\u0002+\u0003\u0002\u0002\u0002\u0002-\u0003\u0002\u0002\u0002",
    "\u0002/\u0003\u0002\u0002\u0002\u00021\u0003\u0002\u0002\u0002\u0002",
    "3\u0003\u0002\u0002\u0002\u00025\u0003\u0002\u0002\u0002\u00027\u0003",
    "\u0002\u0002\u0002\u00029\u0003\u0002\u0002\u0002\u0002;\u0003\u0002",
    "\u0002\u0002\u0002=\u0003\u0002\u0002\u0002\u0002?\u0003\u0002\u0002",
    "\u0002\u0002A\u0003\u0002\u0002\u0002\u0002C\u0003\u0002\u0002\u0002",
    "\u0002E\u0003\u0002\u0002\u0002\u0002G\u0003\u0002\u0002\u0002\u0002",
    "I\u0003\u0002\u0002\u0002\u0002K\u0003\u0002\u0002\u0002\u0002M\u0003",
    "\u0002\u0002\u0002\u0002O\u0003\u0002\u0002\u0002\u0002Q\u0003\u0002",
    "\u0002\u0002\u0002S\u0003\u0002\u0002\u0002\u0002U\u0003\u0002\u0002",
    "\u0002\u0002W\u0003\u0002\u0002\u0002\u0002Y\u0003\u0002\u0002\u0002",
    "\u0002[\u0003\u0002\u0002\u0002\u0002]\u0003\u0002\u0002\u0002\u0002",
    "_\u0003\u0002\u0002\u0002\u0003a\u0003\u0002\u0002\u0002\u0005e\u0003",
    "\u0002\u0002\u0002\u0007k\u0003\u0002\u0002\u0002\tp\u0003\u0002\u0002",
    "\u0002\u000bu\u0003\u0002\u0002\u0002\r}\u0003\u0002\u0002\u0002\u000f",
    "\u0084\u0003\u0002\u0002\u0002\u0011\u0088\u0003\u0002\u0002\u0002\u0013",
    "\u008d\u0003\u0002\u0002\u0002\u0015\u0090\u0003\u0002\u0002\u0002\u0017",
    "\u0095\u0003\u0002\u0002\u0002\u0019\u009c\u0003\u0002\u0002\u0002\u001b",
    "\u00a1\u0003\u0002\u0002\u0002\u001d\u00a7\u0003\u0002\u0002\u0002\u001f",
    "\u00ac\u0003\u0002\u0002\u0002!\u00af\u0003\u0002\u0002\u0002#\u00b1",
    "\u0003\u0002\u0002\u0002%\u00b3\u0003\u0002\u0002\u0002\'\u00b5\u0003",
    "\u0002\u0002\u0002)\u00b7\u0003\u0002\u0002\u0002+\u00b9\u0003\u0002",
    "\u0002\u0002-\u00bb\u0003\u0002\u0002\u0002/\u00bd\u0003\u0002\u0002",
    "\u00021\u00bf\u0003\u0002\u0002\u00023\u00c1\u0003\u0002\u0002\u0002",
    "5\u00c3\u0003\u0002\u0002\u00027\u00c5\u0003\u0002\u0002\u00029\u00c7",
    "\u0003\u0002\u0002\u0002;\u00c9\u0003\u0002\u0002\u0002=\u00cc\u0003",
    "\u0002\u0002\u0002?\u00cf\u0003\u0002\u0002\u0002A\u00d2\u0003\u0002",
    "\u0002\u0002C\u00d5\u0003\u0002\u0002\u0002E\u00d7\u0003\u0002\u0002",
    "\u0002G\u00da\u0003\u0002\u0002\u0002I\u00dd\u0003\u0002\u0002\u0002",
    "K\u00df\u0003\u0002\u0002\u0002M\u00e1\u0003\u0002\u0002\u0002O\u00e3",
    "\u0003\u0002\u0002\u0002Q\u00e7\u0003\u0002\u0002\u0002S\u00ed\u0003",
    "\u0002\u0002\u0002U\u00f0\u0003\u0002\u0002\u0002W\u00f8\u0003\u0002",
    "\u0002\u0002Y\u00fd\u0003\u0002\u0002\u0002[\u0109\u0003\u0002\u0002",
    "\u0002]\u0112\u0003\u0002\u0002\u0002_\u0117\u0003\u0002\u0002\u0002",
    "ab\u0007k\u0002\u0002bc\u0007p\u0002\u0002cd\u0007v\u0002\u0002d\u0004",
    "\u0003\u0002\u0002\u0002ef\u0007h\u0002\u0002fg\u0007n\u0002\u0002g",
    "h\u0007q\u0002\u0002hi\u0007c\u0002\u0002ij\u0007v\u0002\u0002j\u0006",
    "\u0003\u0002\u0002\u0002kl\u0007e\u0002\u0002lm\u0007j\u0002\u0002m",
    "n\u0007c\u0002\u0002no\u0007t\u0002\u0002o\b\u0003\u0002\u0002\u0002",
    "pq\u0007x\u0002\u0002qr\u0007q\u0002\u0002rs\u0007k\u0002\u0002st\u0007",
    "f\u0002\u0002t\n\u0003\u0002\u0002\u0002uv\u0007r\u0002\u0002vw\u0007",
    "t\u0002\u0002wx\u0007q\u0002\u0002xy\u0007i\u0002\u0002yz\u0007t\u0002",
    "\u0002z{\u0007c\u0002\u0002{|\u0007o\u0002\u0002|\f\u0003\u0002\u0002",
    "\u0002}~\u0007o\u0002\u0002~\u007f\u0007q\u0002\u0002\u007f\u0080\u0007",
    "f\u0002\u0002\u0080\u0081\u0007w\u0002\u0002\u0081\u0082\u0007n\u0002",
    "\u0002\u0082\u0083\u0007g\u0002\u0002\u0083\u000e\u0003\u0002\u0002",
    "\u0002\u0084\u0085\u0007x\u0002\u0002\u0085\u0086\u0007c\u0002\u0002",
    "\u0086\u0087\u0007t\u0002\u0002\u0087\u0010\u0003\u0002\u0002\u0002",
    "\u0088\u0089\u0007o\u0002\u0002\u0089\u008a\u0007c\u0002\u0002\u008a",
    "\u008b\u0007k\u0002\u0002\u008b\u008c\u0007p\u0002\u0002\u008c\u0012",
    "\u0003\u0002\u0002\u0002\u008d\u008e\u0007k\u0002\u0002\u008e\u008f",
    "\u0007h\u0002\u0002\u008f\u0014\u0003\u0002\u0002\u0002\u0090\u0091",
    "\u0007g\u0002\u0002\u0091\u0092\u0007n\u0002\u0002\u0092\u0093\u0007",
    "u\u0002\u0002\u0093\u0094\u0007g\u0002\u0002\u0094\u0016\u0003\u0002",
    "\u0002\u0002\u0095\u0096\u0007t\u0002\u0002\u0096\u0097\u0007g\u0002",
    "\u0002\u0097\u0098\u0007v\u0002\u0002\u0098\u0099\u0007w\u0002\u0002",
    "\u0099\u009a\u0007t\u0002\u0002\u009a\u009b\u0007p\u0002\u0002\u009b",
    "\u0018\u0003\u0002\u0002\u0002\u009c\u009d\u0007t\u0002\u0002\u009d",
    "\u009e\u0007g\u0002\u0002\u009e\u009f\u0007c\u0002\u0002\u009f\u00a0",
    "\u0007f\u0002\u0002\u00a0\u001a\u0003\u0002\u0002\u0002\u00a1\u00a2",
    "\u0007y\u0002\u0002\u00a2\u00a3\u0007t\u0002\u0002\u00a3\u00a4\u0007",
    "k\u0002\u0002\u00a4\u00a5\u0007v\u0002\u0002\u00a5\u00a6\u0007g\u0002",
    "\u0002\u00a6\u001c\u0003\u0002\u0002\u0002\u00a7\u00a8\u0007v\u0002",
    "\u0002\u00a8\u00a9\u0007j\u0002\u0002\u00a9\u00aa\u0007g\u0002\u0002",
    "\u00aa\u00ab\u0007p\u0002\u0002\u00ab\u001e\u0003\u0002\u0002\u0002",
    "\u00ac\u00ad\u0007v\u0002\u0002\u00ad\u00ae\u0007q\u0002\u0002\u00ae",
    " \u0003\u0002\u0002\u0002\u00af\u00b0\u0007=\u0002\u0002\u00b0\"\u0003",
    "\u0002\u0002\u0002\u00b1\u00b2\u0007.\u0002\u0002\u00b2$\u0003\u0002",
    "\u0002\u0002\u00b3\u00b4\u0007]\u0002\u0002\u00b4&\u0003\u0002\u0002",
    "\u0002\u00b5\u00b6\u0007_\u0002\u0002\u00b6(\u0003\u0002\u0002\u0002",
    "\u00b7\u00b8\u0007}\u0002\u0002\u00b8*\u0003\u0002\u0002\u0002\u00b9",
    "\u00ba\u0007\u007f\u0002\u0002\u00ba,\u0003\u0002\u0002\u0002\u00bb",
    "\u00bc\u0007*\u0002\u0002\u00bc.\u0003\u0002\u0002\u0002\u00bd\u00be",
    "\u0007+\u0002\u0002\u00be0\u0003\u0002\u0002\u0002\u00bf\u00c0\u0007",
    "-\u0002\u0002\u00c02\u0003\u0002\u0002\u0002\u00c1\u00c2\u0007/\u0002",
    "\u0002\u00c24\u0003\u0002\u0002\u0002\u00c3\u00c4\u0007,\u0002\u0002",
    "\u00c46\u0003\u0002\u0002\u0002\u00c5\u00c6\u00071\u0002\u0002\u00c6",
    "8\u0003\u0002\u0002\u0002\u00c7\u00c8\u0007\'\u0002\u0002\u00c8:\u0003",
    "\u0002\u0002\u0002\u00c9\u00ca\u0007?\u0002\u0002\u00ca\u00cb\u0007",
    "?\u0002\u0002\u00cb<\u0003\u0002\u0002\u0002\u00cc\u00cd\u0007@\u0002",
    "\u0002\u00cd\u00ce\u0007?\u0002\u0002\u00ce>\u0003\u0002\u0002\u0002",
    "\u00cf\u00d0\u0007>\u0002\u0002\u00d0\u00d1\u0007?\u0002\u0002\u00d1",
    "@\u0003\u0002\u0002\u0002\u00d2\u00d3\u0007#\u0002\u0002\u00d3\u00d4",
    "\u0007?\u0002\u0002\u00d4B\u0003\u0002\u0002\u0002\u00d5\u00d6\u0007",
    "#\u0002\u0002\u00d6D\u0003\u0002\u0002\u0002\u00d7\u00d8\u0007~\u0002",
    "\u0002\u00d8\u00d9\u0007~\u0002\u0002\u00d9F\u0003\u0002\u0002\u0002",
    "\u00da\u00db\u0007(\u0002\u0002\u00db\u00dc\u0007(\u0002\u0002\u00dc",
    "H\u0003\u0002\u0002\u0002\u00dd\u00de\u0007@\u0002\u0002\u00deJ\u0003",
    "\u0002\u0002\u0002\u00df\u00e0\u0007>\u0002\u0002\u00e0L\u0003\u0002",
    "\u0002\u0002\u00e1\u00e2\u0007?\u0002\u0002\u00e2N\u0003\u0002\u0002",
    "\u0002\u00e3\u00e4\u0007h\u0002\u0002\u00e4\u00e5\u0007q\u0002\u0002",
    "\u00e5\u00e6\u0007t\u0002\u0002\u00e6P\u0003\u0002\u0002\u0002\u00e7",
    "\u00e8\u0007y\u0002\u0002\u00e8\u00e9\u0007j\u0002\u0002\u00e9\u00ea",
    "\u0007k\u0002\u0002\u00ea\u00eb\u0007n\u0002\u0002\u00eb\u00ec\u0007",
    "g\u0002\u0002\u00ecR\u0003\u0002\u0002\u0002\u00ed\u00ee\u0007f\u0002",
    "\u0002\u00ee\u00ef\u0007q\u0002\u0002\u00efT\u0003\u0002\u0002\u0002",
    "\u00f0\u00f4\t\u0002\u0002\u0002\u00f1\u00f3\t\u0003\u0002\u0002\u00f2",
    "\u00f1\u0003\u0002\u0002\u0002\u00f3\u00f6\u0003\u0002\u0002\u0002\u00f4",
    "\u00f2\u0003\u0002\u0002\u0002\u00f4\u00f5\u0003\u0002\u0002\u0002\u00f5",
    "V\u0003\u0002\u0002\u0002\u00f6\u00f4\u0003\u0002\u0002\u0002\u00f7",
    "\u00f9\u00042;\u0002\u00f8\u00f7\u0003\u0002\u0002\u0002\u00f9\u00fa",
    "\u0003\u0002\u0002\u0002\u00fa\u00f8\u0003\u0002\u0002\u0002\u00fa\u00fb",
    "\u0003\u0002\u0002\u0002\u00fbX\u0003\u0002\u0002\u0002\u00fc\u00fe",
    "\u00042;\u0002\u00fd\u00fc\u0003\u0002\u0002\u0002\u00fe\u00ff\u0003",
    "\u0002\u0002\u0002\u00ff\u00fd\u0003\u0002\u0002\u0002\u00ff\u0100\u0003",
    "\u0002\u0002\u0002\u0100\u0107\u0003\u0002\u0002\u0002\u0101\u0103\u0007",
    "0\u0002\u0002\u0102\u0104\u00042;\u0002\u0103\u0102\u0003\u0002\u0002",
    "\u0002\u0104\u0105\u0003\u0002\u0002\u0002\u0105\u0103\u0003\u0002\u0002",
    "\u0002\u0105\u0106\u0003\u0002\u0002\u0002\u0106\u0108\u0003\u0002\u0002",
    "\u0002\u0107\u0101\u0003\u0002\u0002\u0002\u0107\u0108\u0003\u0002\u0002",
    "\u0002\u0108Z\u0003\u0002\u0002\u0002\u0109\u010d\u0007$\u0002\u0002",
    "\u010a\u010c\n\u0004\u0002\u0002\u010b\u010a\u0003\u0002\u0002\u0002",
    "\u010c\u010f\u0003\u0002\u0002\u0002\u010d\u010b\u0003\u0002\u0002\u0002",
    "\u010d\u010e\u0003\u0002\u0002\u0002\u010e\u0110\u0003\u0002\u0002\u0002",
    "\u010f\u010d\u0003\u0002\u0002\u0002\u0110\u0111\u0007$\u0002\u0002",
    "\u0111\\\u0003\u0002\u0002\u0002\u0112\u0113\t\u0005\u0002\u0002\u0113",
    "\u0114\n\u0006\u0002\u0002\u0114\u0115\t\u0005\u0002\u0002\u0115^\u0003",
    "\u0002\u0002\u0002\u0116\u0118\t\u0007\u0002\u0002\u0117\u0116\u0003",
    "\u0002\u0002\u0002\u0118\u0119\u0003\u0002\u0002\u0002\u0119\u0117\u0003",
    "\u0002\u0002\u0002\u0119\u011a\u0003\u0002\u0002\u0002\u011a\u011b\u0003",
    "\u0002\u0002\u0002\u011b\u011c\b0\u0002\u0002\u011c`\u0003\u0002\u0002",
    "\u0002\n\u0002\u00f4\u00fa\u00ff\u0105\u0107\u010d\u0119\u0003\b\u0002",
    "\u0002"].join("");


var atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

var decisionsToDFA = atn.decisionToState.map( function(ds, index) { return new antlr4.dfa.DFA(ds, index); });

function ParPlusPlusLexer(input) {
	antlr4.Lexer.call(this, input);
    this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    return this;
}

ParPlusPlusLexer.prototype = Object.create(antlr4.Lexer.prototype);
ParPlusPlusLexer.prototype.constructor = ParPlusPlusLexer;

Object.defineProperty(ParPlusPlusLexer.prototype, "atn", {
        get : function() {
                return atn;
        }
});

ParPlusPlusLexer.EOF = antlr4.Token.EOF;
ParPlusPlusLexer.T__0 = 1;
ParPlusPlusLexer.T__1 = 2;
ParPlusPlusLexer.T__2 = 3;
ParPlusPlusLexer.VOID = 4;
ParPlusPlusLexer.PROGRAM = 5;
ParPlusPlusLexer.MODULE = 6;
ParPlusPlusLexer.VAR = 7;
ParPlusPlusLexer.MAIN = 8;
ParPlusPlusLexer.IF = 9;
ParPlusPlusLexer.ELSE = 10;
ParPlusPlusLexer.RETURN = 11;
ParPlusPlusLexer.READ = 12;
ParPlusPlusLexer.WRITE = 13;
ParPlusPlusLexer.THEN = 14;
ParPlusPlusLexer.TO = 15;
ParPlusPlusLexer.SEMICOLON = 16;
ParPlusPlusLexer.COMMA = 17;
ParPlusPlusLexer.LB = 18;
ParPlusPlusLexer.RB = 19;
ParPlusPlusLexer.LCB = 20;
ParPlusPlusLexer.RCB = 21;
ParPlusPlusLexer.LP = 22;
ParPlusPlusLexer.RP = 23;
ParPlusPlusLexer.PLUS = 24;
ParPlusPlusLexer.MINUS = 25;
ParPlusPlusLexer.MULT = 26;
ParPlusPlusLexer.DIV = 27;
ParPlusPlusLexer.MOD = 28;
ParPlusPlusLexer.EQ = 29;
ParPlusPlusLexer.GTEQ = 30;
ParPlusPlusLexer.LTEQ = 31;
ParPlusPlusLexer.NEQ = 32;
ParPlusPlusLexer.NOT = 33;
ParPlusPlusLexer.OR = 34;
ParPlusPlusLexer.AND = 35;
ParPlusPlusLexer.GT = 36;
ParPlusPlusLexer.LT = 37;
ParPlusPlusLexer.ASSIGN = 38;
ParPlusPlusLexer.FOR = 39;
ParPlusPlusLexer.WHILE = 40;
ParPlusPlusLexer.DO = 41;
ParPlusPlusLexer.ID = 42;
ParPlusPlusLexer.INT = 43;
ParPlusPlusLexer.FLOAT = 44;
ParPlusPlusLexer.STRING = 45;
ParPlusPlusLexer.CHAR = 46;
ParPlusPlusLexer.WHITESPACE = 47;

ParPlusPlusLexer.prototype.channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];

ParPlusPlusLexer.prototype.modeNames = [ "DEFAULT_MODE" ];

ParPlusPlusLexer.prototype.literalNames = [ null, "'int'", "'float'", "'char'", 
                                            "'void'", "'program'", "'module'", 
                                            "'var'", "'main'", "'if'", "'else'", 
                                            "'return'", "'read'", "'write'", 
                                            "'then'", "'to'", "';'", "','", 
                                            "'['", "']'", "'{'", "'}'", 
                                            "'('", "')'", "'+'", "'-'", 
                                            "'*'", "'/'", "'%'", "'=='", 
                                            "'>='", "'<='", "'!='", "'!'", 
                                            "'||'", "'&&'", "'>'", "'<'", 
                                            "'='", "'for'", "'while'", "'do'" ];

ParPlusPlusLexer.prototype.symbolicNames = [ null, null, null, null, "VOID", 
                                             "PROGRAM", "MODULE", "VAR", 
                                             "MAIN", "IF", "ELSE", "RETURN", 
                                             "READ", "WRITE", "THEN", "TO", 
                                             "SEMICOLON", "COMMA", "LB", 
                                             "RB", "LCB", "RCB", "LP", "RP", 
                                             "PLUS", "MINUS", "MULT", "DIV", 
                                             "MOD", "EQ", "GTEQ", "LTEQ", 
                                             "NEQ", "NOT", "OR", "AND", 
                                             "GT", "LT", "ASSIGN", "FOR", 
                                             "WHILE", "DO", "ID", "INT", 
                                             "FLOAT", "STRING", "CHAR", 
                                             "WHITESPACE" ];

ParPlusPlusLexer.prototype.ruleNames = [ "T__0", "T__1", "T__2", "VOID", 
                                         "PROGRAM", "MODULE", "VAR", "MAIN", 
                                         "IF", "ELSE", "RETURN", "READ", 
                                         "WRITE", "THEN", "TO", "SEMICOLON", 
                                         "COMMA", "LB", "RB", "LCB", "RCB", 
                                         "LP", "RP", "PLUS", "MINUS", "MULT", 
                                         "DIV", "MOD", "EQ", "GTEQ", "LTEQ", 
                                         "NEQ", "NOT", "OR", "AND", "GT", 
                                         "LT", "ASSIGN", "FOR", "WHILE", 
                                         "DO", "ID", "INT", "FLOAT", "STRING", 
                                         "CHAR", "WHITESPACE" ];

ParPlusPlusLexer.prototype.grammarFileName = "ParPlusPlus.g4";


exports.ParPlusPlusLexer = ParPlusPlusLexer;

